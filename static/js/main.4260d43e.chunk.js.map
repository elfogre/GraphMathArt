{"version":3,"sources":["app/components/RenderBox.js","app/components/Header.js","app/components/FooterMenu.js","app/constants/TimeActionTypes.js","app/actions/timeActions.js","app/containers/App.js","app/reducers/scene.js","app/reducers/time.js","app/reducers/index.js","app/store/configureStore.js","index.js"],"names":["ctx","lastTime","RenderBox","props","Object","_home_jose_elfogre_GraphMathArt_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_jose_elfogre_GraphMathArt_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_jose_elfogre_GraphMathArt_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","refs","canvas","getContext","updateCanvas","startrun","x","y","r","g","b","a","canvasData","index","scene","xsize","data","t","time","evalCanvas","timepaused","actions","setTime","eval","timeIncrement","putImageData","e","console","log","stack","name","message","concat","xInitialValue","yInitialValue","ysize","xIncrement","yIncrement","backgroundredcolour","backgroundgreencolour","backgroundbluecolour","gameTick","bindThis","requestAnimationFrame","tick","timeNow","Date","now","elapsed","smoothElapsed","prevElapsed","prevElapsed2","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","ref","width","height","Component","MyTextInput","react_default","FormControl","assign","type","bkgcolor","framesize","coordinatessize","timecontrol","Header","values","JSON","stringify","lib","model","Grid","Panel","header","Row","className","Col","xs","FormGroup","ControlLabel","text","component","value","Button","onClick","handleStartTime","handlePauseTime","handleRestartTime","FooterMenu","window","open","document","write","handleExportGraph","PAUSE_TIME","START_TIME","RESTART_TIME","SET_TIME","types","App","_this$props","timeActions","PageHeader","components_Header","components_FooterMenu","connect","state","dispatch","bindActionCreators","TimeActions","combineForms","initialState","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","store","createStore","render","es","BrowserRouter","Route","path","getElementById"],"mappings":"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","file":"static/js/main.4260d43e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nlet ctx;\n\nconst lastTime = 0;\n\nclass RenderBox extends Component {\n  constructor(props) {\n    super(props);\n    // create a ref to store the textInput DOM element\n    //this.canvas = React.createRef();\n  }\n\n  componentDidMount() {\n    ctx = this.refs.canvas.getContext('2d');\n    this.updateCanvas();\n    this.startrun(this.updateCanvas);\n  }\n\n  componentDidUpdate() {\n    // this.updateCanvas();\n  }\n\n  drawPixel(x, y, r, g, b, a, canvasData) {\n    const index = (x + y * this.props.scene.scene.xsize) * 4;\n\n    canvasData.data[index + 0] = r;\n    canvasData.data[index + 1] = g;\n    canvasData.data[index + 2] = b;\n    canvasData.data[index + 3] = a;\n  }\n\n  updateCanvas() {\n    try {\n      const t = this.props.time.time;\n      const canvasData = this.evalCanvas(this.props.scene.scene, t);\n      if (!this.props.time.timepaused) {\n        this.props.actions.setTime(eval(this.props.scene.scene.timeIncrement));\n      }\n      ctx.putImageData(canvasData, 0, 0);\n    } catch (e) {\n      console.log(\"Error\", e.stack);\n      console.log(\"Error\", e.name);\n      console.log(\"Error\", e.message);\n    }\n  }\n\n  evalCanvas(scene, time) {\n    const t = time; // eslint-disable-line no-unused-vars\n    const canvasData =  eval(`\n    var x = ${scene.xInitialValue};\n    var y = ${scene.yInitialValue};\n    var canvasData = ctx.getImageData(0, 0, ${scene.xsize}, ${scene.ysize});\n    for (var canvasx = 0; canvasx < ${scene.xsize}; canvasx++) {\n      y = ${scene.yInitialValue};\n      x = ${scene.xIncrement};\n      for (var canvasy = 0; canvasy < ${scene.ysize}; canvasy++) {\n        y = ${scene.yIncrement};\n        this.drawPixel (canvasx,canvasy, (${scene.backgroundredcolour})%256, (${scene.backgroundgreencolour})%256, (${scene.backgroundbluecolour})%256, 255, canvasData);\n      }\n    }\n    canvasData;`);\n    return canvasData;\n  }\n\n  startrun(gameTick) {\n    console.log('startrun:', this.lastTime);\n    this.gameTick = gameTick;\n    if (lastTime === 0) {\n      // Once started, the loop never stops.\n      // But this function is called to change tick functions.\n      // Avoid requesting multiple frames per frame.\n      const bindThis = this;\n      requestAnimationFrame(function() { bindThis.tick(); } );\n      this.lastTime = 0;\n    }\n  }\n\n  stoprun() {\n    this.startrun(null);\n  }\n\n  tick() {\n    if (this.gameTick === null) {\n      this.lastTime = 0;\n      return;\n    }\n    const bindThis = this;\n    requestAnimationFrame(function() { bindThis.tick(); } );\n    const timeNow = Date.now();\n    let elapsed = timeNow - this.lastTime;\n    if (elapsed > 0) {\n      if (this.lastTime !== 0) {\n        if (elapsed > 1000) { // Cap max elapsed time to 1 second to avoid death spiral\n          elapsed = 1000;\n        }\n        // Hackish fps smoothing\n        const smoothElapsed = (elapsed + this.prevElapsed + this.prevElapsed2) / 3;\n        this.gameTick(0.001 * smoothElapsed);\n        this.prevElapsed2 = this.prevElapsed;\n        this.prevElapsed = elapsed;\n      }\n      this.lastTime = timeNow;\n    }\n  }\n\n  render() {\n    return (\n      <canvas ref=\"canvas\" width={this.props.scene.scene.xsize} height={this.props.scene.scene.ysize}/>\n    );\n  }\n}\n\nRenderBox.propTypes = {\n  scene: PropTypes.object.isRequired,\n  actions: PropTypes.object.isRequired,\n  time: PropTypes.object.isRequired\n};\n\nexport default RenderBox;\n","import React, {Component} from 'react';\nimport {Control, Form} from 'react-redux-form';\nimport {Grid, Row, Col, FormControl, ControlLabel, FormGroup, Button, Panel} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst MyTextInput = props => <FormControl type=\"text\" {...props}/>;\n\nconst bkgcolor = (\n  <h3>Background color</h3>\n);\nconst framesize = (\n  <h3>Frame size</h3>\n);\nconst coordinatessize = (\n  <h3>Coordinates size</h3>\n);\nconst timecontrol = (\n  <h3>Time control</h3>\n);\n\nclass Header extends Component {\n\n  handleSubmit(values) {\n    // Do anything you want with the form value\n    console.log(JSON.stringify(values, null, 2));\n  }\n\n  render() {\n    return (\n      <Form\n        model=\"scene\"\n        // onSubmit={val => this.handleSubmit(val)}\n        >\n        <Grid>\n          <Panel header={bkgcolor}>\n            <Row className=\"show-grid\">\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>Red value</ControlLabel>\n                  <Control.text model=\"scene.backgroundredcolour\" component={MyTextInput} value={this.props.scene.scene.backgroundredcolour}/>\n                </FormGroup>\n              </Col>\n\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>Green value</ControlLabel>\n                  <Control.text model=\"scene.backgroundgreencolour\" component={MyTextInput} value={this.props.scene.scene.backgroundgreencolour}/>\n                </FormGroup>\n              </Col>\n\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>Blue value</ControlLabel>\n                  <Control.text model=\"scene.backgroundbluecolour\" component={MyTextInput} value={this.props.scene.scene.backgroundbluecolour}/>\n                </FormGroup>\n              </Col>\n\n            </Row>\n          </Panel>\n          <Panel header={framesize}>\n            <Row className=\"show-grid\">\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>Image x size</ControlLabel>\n                  <Control.text model=\"scene.xsize\" component={MyTextInput} value={this.props.scene.scene.xsize}/>\n                </FormGroup>\n              </Col>\n\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>Image y size</ControlLabel>\n                  <Control.text model=\"scene.ysize\" component={MyTextInput} value={this.props.scene.scene.ysize}/>\n                </FormGroup>\n              </Col>\n            </Row>\n          </Panel>\n          <Panel header={coordinatessize}>\n            <Row className=\"show-grid\">\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>x initial value</ControlLabel>\n                  <Control.text model=\"scene.xInitialValue\" component={MyTextInput} value={this.props.scene.scene.xInitialValue}/>\n                </FormGroup>\n              </Col>\n\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>x coordinates function</ControlLabel>\n                  <Control.text model=\"scene.xIncrement\" component={MyTextInput} value={this.props.scene.scene.xIncrement}/>\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row className=\"show-grid\">\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>y initial value</ControlLabel>\n                  <Control.text model=\"scene.yInitialValue\" component={MyTextInput} value={this.props.scene.scene.yInitialValue}/>\n                </FormGroup>\n              </Col>\n\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>y coordinates function</ControlLabel>\n                  <Control.text model=\"scene.yIncrement\" component={MyTextInput} value={this.props.scene.scene.yIncrement}/>\n                </FormGroup>\n              </Col>\n            </Row>\n          </Panel>\n          <Panel header={timecontrol}>\n            <Row className=\"show-grid\">\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>Time function</ControlLabel>\n                  <Control.text model=\"scene.timeIncrement\" component={MyTextInput} value={this.props.scene.scene.timeIncrement}/>\n                </FormGroup>\n              </Col>\n\n              <Col xs={4}>\n                <FormGroup>\n                  <ControlLabel>Actual time: </ControlLabel> {this.props.time.time}\n                </FormGroup>\n              </Col>\n              <Col xs={4}>\n                <FormGroup>\n                  {this.props.time.timepaused ?\n                    <Button onClick={this.props.actions.handleStartTime}>Play</Button> : <Button onClick={this.props.actions.handlePauseTime}>Pause</Button>\n                  }\n                  <Button onClick={this.props.actions.handleRestartTime}>Restart</Button>\n                </FormGroup>\n              </Col>\n            </Row>\n          </Panel>\n        </Grid>\n      </Form>\n    );\n  }\n}\n\nHeader.propTypes = {\n  scene: PropTypes.object.isRequired,\n  actions: PropTypes.object.isRequired,\n  time: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, {Component} from 'react';\n\nimport {Button, Row, Col} from 'react-bootstrap';\n\nconst HTML_TEMPLATE = '<!DOCTYPE html><html><head><script></script></head><body><h1>My Web Page</h1></body></html>';\n\nclass FooterMenu extends Component {\n\n  handleExportGraph() {\n    const newWindow = window.open();\n    newWindow.document.write(HTML_TEMPLATE);\n  }\n\n  render() {\n    return (\n      <Row className=\"show-grid\">\n        <Col xs={4}></Col>\n        <Button onClick={this.handleExportGraph}>Export graph</Button>\n      </Row>\n          \n    );\n  }\n}\n\nexport default FooterMenu;\n","export const PAUSE_TIME = 'PAUSE_TIME';\nexport const START_TIME = 'START_TIME';\nexport const RESTART_TIME = 'RESTART_TIME';\nexport const SET_TIME = 'SET_TIME';\n","import * as types from '../constants/TimeActionTypes';\n\nexport function handlePauseTime() {\n  return {type: types.PAUSE_TIME};\n}\n\nexport function handleStartTime() {\n  return {type: types.START_TIME};\n}\n\nexport function handleRestartTime() {\n  return {type: types.RESTART_TIME};\n}\n\nexport function setTime(time) {\n  return {type: types.SET_TIME, time};\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {PageHeader} from 'react-bootstrap';\n\nimport Header from '../components/Header';\nimport RenderBox from '../components/RenderBox';\nimport FooterMenu from '../components/FooterMenu';\nimport * as TimeActions from '../actions/timeActions';\n\nclass App extends Component {\n  render() {\n    const {time, scene, timeActions} = this.props;\n    return (\n      <div className=\"row\">\n        <PageHeader>GraphMathArt <small>converting functions in actual art</small></PageHeader>\n\n        <Header\n          scene={scene}\n          time={time}\n          actions={timeActions}\n          />\n\n        <div>\n          <RenderBox\n            scene={scene}\n            time={time}\n            actions={timeActions}\n            />\n        </div>\n        <FooterMenu scene={scene}/>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  time: PropTypes.object.isRequired,\n  scene: PropTypes.object.isRequired,\n  timeActions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    time: state.time,\n    scene: state.scene\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    timeActions: bindActionCreators(TimeActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {combineForms} from 'react-redux-form';\n\nconst initialScene = {\n  xsize: 300,\n  ysize: 300,\n  backgroundredcolour: '0',\n  backgroundgreencolour: '0',\n  backgroundbluecolour: '0',\n  timeIncrement: 't+1',\n  xInitialValue: 0,\n  xIncrement: 'x+1',\n  yInitialValue: 0,\n  yIncrement: 'y+1'\n};\n\nexport default combineForms({\n  scene: initialScene\n});\n","import {PAUSE_TIME, START_TIME, RESTART_TIME, SET_TIME} from '../constants/TimeActionTypes';\n\nconst initialState = {time: 0, timepaused: true};\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case PAUSE_TIME:\n      return {...state, timepaused: true};\n    case START_TIME:\n      return {...state, timepaused: false};\n    case RESTART_TIME:\n      return {...state, time: 0};\n    case SET_TIME:\n      return {...state, time: action.time};\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport scene from './scene';\nimport time from './time';\n\nconst rootReducer = combineReducers({\n  time,\n  scene\n});\n\nexport default rootReducer;\n","import {createStore} from 'redux';\nimport rootReducer from '../reducers/index';\n\nexport default function configureStore(initialState) {\n  const store = createStore(rootReducer, initialState);\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextReducer = rootReducer;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n}\n","//import 'babel-polyfill';\n\nimport React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './app/containers/App';\nimport configureStore from './app/store/configureStore';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path=\"/\" component={App}/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}